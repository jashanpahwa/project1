{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\base_project\\\\client\\\\src\\\\pages\\\\games\\\\spinandwin.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { GameLayout } from \"../../components/gamelayout\";\nimport { BetControl } from \"../../components/betcontrol\";\nimport \"../css/spinandwin.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SpinAndWin = ({\n  balance,\n  onBack,\n  onBalanceChange\n}) => {\n  _s();\n  const symbols = [\"🍒\", \"🍋\", \"🍊\", \"🍇\", \"🔔\", \"⭐\", \"7️⃣\", \"💰\"];\n  const [reels, setReels] = useState([0, 0, 0]);\n  const [spinning, setSpinning] = useState(false);\n  const [winAmount, setWinAmount] = useState(0);\n  const [history, setHistory] = useState([]);\n  const [autoSpins, setAutoSpins] = useState(0);\n  const [jackpot, setJackpot] = useState(10000);\n  const [showWinAnimation, setShowWinAnimation] = useState(false);\n  const [currentBet, setCurrentBet] = useState(0);\n\n  // Paytable configuration\n  const paytable = {\n    \"7️⃣7️⃣7️⃣\": {\n      multiplier: 20,\n      bonus: \"JACKPOT\"\n    },\n    \"💰💰💰\": {\n      multiplier: 10,\n      bonus: \"BIG WIN\"\n    },\n    \"🔔🔔🔔\": {\n      multiplier: 5\n    },\n    \"⭐️⭐️⭐️\": {\n      multiplier: 5\n    },\n    \"🍇🍇🍇\": {\n      multiplier: 3\n    },\n    \"🍊🍊🍊\": {\n      multiplier: 2\n    },\n    \"🍋🍋🍋\": {\n      multiplier: 2\n    },\n    \"🍒🍒🍒\": {\n      multiplier: 2\n    },\n    \"🍒🍒\": {\n      multiplier: 1.5\n    },\n    \"🍋🍋\": {\n      multiplier: 1.2\n    }\n  };\n  const spinReels = useCallback(() => {\n    setSpinning(true);\n    setWinAmount(0);\n\n    // Deduct the bet amount\n    onBalanceChange(-currentBet);\n\n    // Generate random stops for each reel\n    const spins = reels.map(() => Math.floor(Math.random() * symbols.length));\n\n    // Animate each reel with different durations\n    const spinDurations = [1000, 1500, 2000];\n    spins.forEach((stop, index) => {\n      const duration = spinDurations[index];\n      const startTime = Date.now();\n      const spinInterval = setInterval(() => {\n        const elapsed = Date.now() - startTime;\n        const progress = Math.min(elapsed / duration, 1);\n\n        // Update reel position during spin\n        setReels(prev => {\n          const newReels = [...prev];\n          newReels[index] = (newReels[index] + 1) % symbols.length;\n          return newReels;\n        });\n        if (progress >= 1) {\n          clearInterval(spinInterval);\n          // Set final position\n          setReels(prev => {\n            const newReels = [...prev];\n            newReels[index] = stop;\n            return newReels;\n          });\n\n          // Check if all reels have stopped\n          if (index === spins.length - 1) {\n            setTimeout(() => finishSpin(stops), 500);\n          }\n        }\n      }, 50);\n    });\n  }, [currentBet, onBalanceChange, reels, symbols.length]);\n  const finishSpin = stops => {\n    setSpinning(false);\n\n    // Get the symbols that landed\n    const result = stops.map(stop => symbols[stop]).join(\"\");\n\n    // Check for winning combinations\n    let win = 0;\n    let bonus = null;\n\n    // Check for three matching symbols\n    if (result[0] === result[1] && result[1] === result[2]) {\n      const combo = `${result[0]}${result[1]}${result[2]}`;\n      if (paytable[combo]) {\n        win = currentBet * paytable[combo].multiplier;\n        bonus = paytable[combo].bonus;\n      }\n    }\n    // Check for two matching symbols (only left two)\n    else if (result[0] === result[1]) {\n      const combo = `${result[0]}${result[1]}`;\n      if (paytable[combo]) {\n        win = currentBet * paytable[combo].multiplier;\n      }\n    }\n\n    // Handle jackpot\n    if (bonus === \"JACKPOT\") {\n      win += jackpot;\n      setJackpot(10000); // Reset jackpot\n    } else if (result === \"💰💰💰\") {\n      setJackpot(prev => prev + currentBet * 5);\n    }\n    setWinAmount(win);\n    if (win > 0) {\n      onBalanceChange(win);\n      setShowWinAnimation(true);\n      setTimeout(() => setShowWinAnimation(false), 2000);\n    }\n\n    // Add to history\n    setHistory(prev => [{\n      result,\n      win,\n      timestamp: new Date(),\n      bonus\n    }, ...prev.slice(0, 9)]);\n\n    // Continue auto spins if enabled\n    if (autoSpins > 1) {\n      setTimeout(() => {\n        setAutoSpins(autoSpins - 1);\n        spinReels();\n      }, 1500);\n    }\n  };\n  const handleBet = ({\n    amount,\n    autoRoll,\n    rollsCount\n  }) => {\n    if (amount > balance) return;\n    setCurrentBet(amount);\n    if (autoRoll) {\n      setAutoSpins(rollsCount);\n    }\n    spinReels();\n  };\n  return /*#__PURE__*/_jsxDEV(GameLayout, {\n    title: \"SpinAndWin\",\n    balance: balance,\n    onBack: onBack,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slot-machine-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"jackpot-display\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"jackpot-label\",\n          children: \"JACKPOT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"jackpot-amount\",\n          children: [\"\\u20B9\", jackpot.toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slot-reels\",\n        children: reels.map((reel, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `reel ${spinning ? \"spinning\" : \"\"}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reel-strip\",\n            children: [...symbols, ...symbols, ...symbols].map((symbol, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `symbol ${i % symbols.length === reel ? \"center\" : \"\"}`,\n              children: symbol\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), showWinAnimation && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"win-animation\",\n        children: winAmount >= jackpot ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"jackpot-win\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"JACKPOT!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"\\u20B9\", winAmount.toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 15\n        }, this) : winAmount > currentBet * 5 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"big-win\",\n          children: \"BIG WIN!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"win\",\n          children: \"WIN!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"last-spin\",\n        children: history.length > 0 && !spinning && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `result ${history[0].win > 0 ? \"win\" : \"\"}`,\n          children: [history[0].result, \" \", history[0].win > 0 ? `+₹${history[0].win}` : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BetControl, {\n        balance: balance,\n        onBet: handleBet,\n        buttonText: autoSpins > 0 ? `Spinning (${autoSpins}x)` : \"Spin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"paytable\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Paytable\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"paytable-grid\",\n          children: Object.entries(paytable).map(([combo, {\n            multiplier,\n            bonus\n          }]) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"paytable-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"combo\",\n              children: combo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"payout\",\n              children: [multiplier, \"x\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this), bonus && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bonus\",\n              children: bonus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 27\n            }, this)]\n          }, combo, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spin-history\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Recent Spins\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"history-list\",\n          children: history.length > 0 ? history.map((spin, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `history-item ${spin.win > 0 ? \"win\" : \"\"}`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"result\",\n              children: spin.result\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"time\",\n              children: spin.timestamp.toLocaleTimeString([], {\n                hour: '2-digit',\n                minute: '2-digit'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"amount\",\n              children: spin.win > 0 ? `+₹${spin.win}` : \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 19\n            }, this), spin.bonus && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"bonus\",\n              children: spin.bonus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 34\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-history\",\n            children: \"No spins yet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n_s(SpinAndWin, \"hyGA3w2FDLklH7Q/QQKgJ1Nygu4=\");\n_c = SpinAndWin;\nvar _c;\n$RefreshReg$(_c, \"SpinAndWin\");","map":{"version":3,"names":["React","useState","useEffect","GameLayout","BetControl","jsxDEV","_jsxDEV","SpinAndWin","balance","onBack","onBalanceChange","_s","symbols","reels","setReels","spinning","setSpinning","winAmount","setWinAmount","history","setHistory","autoSpins","setAutoSpins","jackpot","setJackpot","showWinAnimation","setShowWinAnimation","currentBet","setCurrentBet","paytable","multiplier","bonus","spinReels","useCallback","spins","map","Math","floor","random","length","spinDurations","forEach","stop","index","duration","startTime","Date","now","spinInterval","setInterval","elapsed","progress","min","prev","newReels","clearInterval","setTimeout","finishSpin","stops","result","join","win","combo","timestamp","slice","handleBet","amount","autoRoll","rollsCount","title","children","className","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleString","reel","symbol","i","onBet","buttonText","Object","entries","spin","toLocaleTimeString","hour","minute","_c","$RefreshReg$"],"sources":["D:/Projects/base_project/client/src/pages/games/spinandwin.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { GameLayout } from \"../../components/gamelayout\";\r\nimport { BetControl } from \"../../components/betcontrol\";\r\nimport \"../css/spinandwin.css\";\r\n\r\nexport const SpinAndWin = ({ balance, onBack, onBalanceChange }) => {\r\n  const symbols = [\"🍒\", \"🍋\", \"🍊\", \"🍇\", \"🔔\", \"⭐\", \"7️⃣\", \"💰\"];\r\n  const [reels, setReels] = useState([0, 0, 0]);\r\n  const [spinning, setSpinning] = useState(false);\r\n  const [winAmount, setWinAmount] = useState(0);\r\n  const [history, setHistory] = useState([]);\r\n  const [autoSpins, setAutoSpins] = useState(0);\r\n  const [jackpot, setJackpot] = useState(10000);\r\n  const [showWinAnimation, setShowWinAnimation] = useState(false);\r\n  const [currentBet, setCurrentBet] = useState(0);\r\n\r\n  // Paytable configuration\r\n  const paytable = {\r\n    \"7️⃣7️⃣7️⃣\": { multiplier: 20, bonus: \"JACKPOT\" },\r\n    \"💰💰💰\": { multiplier: 10, bonus: \"BIG WIN\" },\r\n    \"🔔🔔🔔\": { multiplier: 5 },\r\n    \"⭐️⭐️⭐️\": { multiplier: 5 },\r\n    \"🍇🍇🍇\": { multiplier: 3 },\r\n    \"🍊🍊🍊\": { multiplier: 2 },\r\n    \"🍋🍋🍋\": { multiplier: 2 },\r\n    \"🍒🍒🍒\": { multiplier: 2 },\r\n    \"🍒🍒\": { multiplier: 1.5 },\r\n    \"🍋🍋\": { multiplier: 1.2 },\r\n  };\r\n\r\n  const spinReels = useCallback(() => {\r\n    setSpinning(true);\r\n    setWinAmount(0);\r\n    \r\n    // Deduct the bet amount\r\n    onBalanceChange(-currentBet);\r\n    \r\n    // Generate random stops for each reel\r\n    const spins = reels.map(() => Math.floor(Math.random() * symbols.length));\r\n    \r\n    // Animate each reel with different durations\r\n    const spinDurations = [1000, 1500, 2000];\r\n    \r\n    spins.forEach((stop, index) => {\r\n      const duration = spinDurations[index];\r\n      const startTime = Date.now();\r\n      \r\n      const spinInterval = setInterval(() => {\r\n        const elapsed = Date.now() - startTime;\r\n        const progress = Math.min(elapsed / duration, 1);\r\n        \r\n        // Update reel position during spin\r\n        setReels(prev => {\r\n          const newReels = [...prev];\r\n          newReels[index] = (newReels[index] + 1) % symbols.length;\r\n          return newReels;\r\n        });\r\n        \r\n        if (progress >= 1) {\r\n          clearInterval(spinInterval);\r\n          // Set final position\r\n          setReels(prev => {\r\n            const newReels = [...prev];\r\n            newReels[index] = stop;\r\n            return newReels;\r\n          });\r\n          \r\n          // Check if all reels have stopped\r\n          if (index === spins.length - 1) {\r\n            setTimeout(() => finishSpin(stops), 500);\r\n          }\r\n        }\r\n      }, 50);\r\n    });\r\n  }, [currentBet, onBalanceChange, reels, symbols.length]);\r\n\r\n  const finishSpin = (stops) => {\r\n    setSpinning(false);\r\n    \r\n    // Get the symbols that landed\r\n    const result = stops.map(stop => symbols[stop]).join(\"\");\r\n    \r\n    // Check for winning combinations\r\n    let win = 0;\r\n    let bonus = null;\r\n    \r\n    // Check for three matching symbols\r\n    if (result[0] === result[1] && result[1] === result[2]) {\r\n      const combo = `${result[0]}${result[1]}${result[2]}`;\r\n      if (paytable[combo]) {\r\n        win = currentBet * paytable[combo].multiplier;\r\n        bonus = paytable[combo].bonus;\r\n      }\r\n    }\r\n    // Check for two matching symbols (only left two)\r\n    else if (result[0] === result[1]) {\r\n      const combo = `${result[0]}${result[1]}`;\r\n      if (paytable[combo]) {\r\n        win = currentBet * paytable[combo].multiplier;\r\n      }\r\n    }\r\n    \r\n    // Handle jackpot\r\n    if (bonus === \"JACKPOT\") {\r\n      win += jackpot;\r\n      setJackpot(10000); // Reset jackpot\r\n    } else if (result === \"💰💰💰\") {\r\n      setJackpot(prev => prev + currentBet * 5);\r\n    }\r\n    \r\n    setWinAmount(win);\r\n    if (win > 0) {\r\n      onBalanceChange(win);\r\n      setShowWinAnimation(true);\r\n      setTimeout(() => setShowWinAnimation(false), 2000);\r\n    }\r\n    \r\n    // Add to history\r\n    setHistory(prev => [\r\n      { result, win, timestamp: new Date(), bonus },\r\n      ...prev.slice(0, 9)\r\n    ]);\r\n    \r\n    // Continue auto spins if enabled\r\n    if (autoSpins > 1) {\r\n      setTimeout(() => {\r\n        setAutoSpins(autoSpins - 1);\r\n        spinReels();\r\n      }, 1500);\r\n    }\r\n  };\r\n\r\n  const handleBet = ({ amount, autoRoll, rollsCount }) => {\r\n    if (amount > balance) return;\r\n    \r\n    setCurrentBet(amount);\r\n    \r\n    if (autoRoll) {\r\n      setAutoSpins(rollsCount);\r\n    }\r\n    \r\n    spinReels();\r\n  };\r\n\r\n  return (\r\n    <GameLayout title=\"SpinAndWin\" balance={balance} onBack={onBack}>\r\n      <div className=\"slot-machine-container\">\r\n        <div className=\"jackpot-display\">\r\n          <div className=\"jackpot-label\">JACKPOT</div>\r\n          <div className=\"jackpot-amount\">₹{jackpot.toLocaleString()}</div>\r\n        </div>\r\n        \r\n        <div className=\"slot-reels\">\r\n          {reels.map((reel, index) => (\r\n            <div key={index} className={`reel ${spinning ? \"spinning\" : \"\"}`}>\r\n              <div className=\"reel-strip\">\r\n                {[...symbols, ...symbols, ...symbols].map((symbol, i) => (\r\n                  <div \r\n                    key={i} \r\n                    className={`symbol ${i % symbols.length === reel ? \"center\" : \"\"}`}\r\n                  >\r\n                    {symbol}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        \r\n        <div className=\"payline\"></div>\r\n        \r\n        {showWinAnimation && (\r\n          <div className=\"win-animation\">\r\n            {winAmount >= jackpot ? (\r\n              <div className=\"jackpot-win\">\r\n                <div>JACKPOT!</div>\r\n                <div>₹{winAmount.toLocaleString()}</div>\r\n              </div>\r\n            ) : winAmount > currentBet * 5 ? (\r\n              <div className=\"big-win\">BIG WIN!</div>\r\n            ) : (\r\n              <div className=\"win\">WIN!</div>\r\n            )}\r\n          </div>\r\n        )}\r\n        \r\n        <div className=\"last-spin\">\r\n          {history.length > 0 && !spinning && (\r\n            <div className={`result ${history[0].win > 0 ? \"win\" : \"\"}`}>\r\n              {history[0].result} {history[0].win > 0 ? `+₹${history[0].win}` : \"\"}\r\n            </div>\r\n          )}\r\n        </div>\r\n        \r\n        <BetControl \r\n          balance={balance} \r\n          onBet={handleBet} \r\n          buttonText={autoSpins > 0 ? `Spinning (${autoSpins}x)` : \"Spin\"}\r\n        />\r\n        \r\n        <div className=\"paytable\">\r\n          <h3>Paytable</h3>\r\n          <div className=\"paytable-grid\">\r\n            {Object.entries(paytable).map(([combo, { multiplier, bonus }]) => (\r\n              <div key={combo} className=\"paytable-item\">\r\n                <div className=\"combo\">{combo}</div>\r\n                <div className=\"payout\">{multiplier}x</div>\r\n                {bonus && <div className=\"bonus\">{bonus}</div>}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"spin-history\">\r\n          <h3>Recent Spins</h3>\r\n          <div className=\"history-list\">\r\n            {history.length > 0 ? (\r\n              history.map((spin, index) => (\r\n                <div \r\n                  key={index} \r\n                  className={`history-item ${spin.win > 0 ? \"win\" : \"\"}`}\r\n                >\r\n                  <span className=\"result\">{spin.result}</span>\r\n                  <span className=\"time\">\r\n                    {spin.timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\r\n                  </span>\r\n                  <span className=\"amount\">\r\n                    {spin.win > 0 ? `+₹${spin.win}` : \"-\"}\r\n                  </span>\r\n                  {spin.bonus && <span className=\"bonus\">{spin.bonus}</span>}\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <div className=\"no-history\">No spins yet</div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </GameLayout>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}